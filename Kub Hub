local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()


local Window = Rayfield:CreateWindow({
   Name = "üî´ Warzone | KOB HUB üî´",
    LoadingTitle = "üòà KOB HUB üòà",
    LoadingSubtitle = "by #silaskid",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = Kob Hub Folder, -- Create a custom folder for your hub/game
      FileName = "Kob Hub"
   },
   Discord = {
      Enabled = true,
      Invite = "2p3aza4HCz", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = false -- Set this to false to make them join the discord every time they load it up
   },
   KeySystem = true, -- Set this to true to use our key system
   KeySettings = {
      Title = "ü•∂ KOB HUB KEY SYSTEM ü•∂",
      Subtitle = "üîë GET KEY IN DISCORD üîë",
      Note = "üîë discord: https://discord.gg/2p3aza4HCz",
      FileName = "Kub_Hub", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
        SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = true, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"https://pastebin.com/raw/cM35CfPJ"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local MainTab = Window:CreateTab("üè† Game", nil) -- Title, Image
local MainSection = MainTab:CreateSection("Main")

Rayfield:Notify({
   Title = "ü•∂ KOB HUB EXECUTED ü•∂",
   Content = "üòà Get Ready To Cheat üòà",
   Duration = 6.5,
   Image = nil,
   Actions = { -- Notification Buttons
      Ignore = {
         Name = "Okay",
         Callback = function()
         print("The user tapped Okay!")
      end
   },
},
})

local Button = MainTab:CreateButton({
   Name = "Infinte Jump",
   Callback = function()
        local InfiniteJumpEnabled = true
game:GetService("UserInputService").JumpRequest:connect(function()
	if InfiniteJumpEnabled then
		game:GetService"Players".LocalPlayer.Character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping")
	end
end)
   end,
})

local Slider = MainTab:CreateSlider({
   Name = "Walkspeed",
   Range = {0, 300},
   Increment = 1,
   Suffix = "Speed",
   CurrentValue = 16,
   Flag = "Slider1",      
   Callback = function(Value)
         game.Players.localPlayer.Character.Humanoid.WalkSpeed = (Value)
   end,
})

local Dropdown = MainTab:CreateDropdown({
   Name = "Silent Aim",
   Options = {"Silent Aim UI (Click UNLOAD IN UI)"},
   CurrentOption = {"nil"},
   MultipleOptions = false,
   Flag = "Pick Aim", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Option)
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Stefanuk12/Aiming/main/Examples/UniversalSilentAim.lua",true))()
   end,
})

local LocalTab = Window:CreateTab("ü•∂ Local", nil) -- Title, Image

local Section = LocalTab:CreateSection("infinite yield")

local Button = LocalTab:CreateButton({
   Name = "infinite yield",
   Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
   end,
})

local MiscTab = Window:CreateTab("üé≤ Misc", nil) -- Title, Image

local Section = MiscTab:CreateSection("Aimbot (CLICK X)")

local Button = MiscTab:CreateButton({
   Name = "Aimbot (CLICK X)",
   Callback = function()
        -- Made By Hugbif4
-- Variables
local player = game.Players.LocalPlayer
local camera = workspace.CurrentCamera
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local aimAssistEnabled = false
local targetPlayer = nil

-- Function to find the closest target
local function findClosestTarget()
	local closestTarget = nil
	local shortestDistance = math.huge

	for _, target in pairs(game.Players:GetPlayers()) do
		if target ~= player and target.Character and target.Character:FindFirstChild("Head") then
			local targetPos = target.Character.Head.Position
			local screenPos, onScreen = camera:WorldToScreenPoint(targetPos)

			if onScreen then
				local mousePos = UserInputService:GetMouseLocation()
				local distance = (Vector2.new(mousePos.X, mousePos.Y) - Vector2.new(screenPos.X, screenPos.Y)).magnitude
				if distance < shortestDistance then
					shortestDistance = distance
					closestTarget = target
				end
			end
		end
	end

	return closestTarget
end

-- Function to lock the camera onto the target
local function lockCameraOntoTarget(targetPlayer)
	if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("Head") then
		local targetPos = targetPlayer.Character.Head.Position
		camera.CFrame = CFrame.new(camera.CFrame.Position, targetPos)
	end
end

-- Enable aim assist when "X" is pressed
UserInputService.InputBegan:Connect(function(input, gameProcessed)
	if not gameProcessed and input.KeyCode == Enum.KeyCode.X then
		aimAssistEnabled = true
		targetPlayer = findClosestTarget()
		if targetPlayer then
			print("Aim assist enabled. Locked onto: " .. targetPlayer.Name)
		else
			print("No target found")
		end
	end
end)

-- Disable aim assist when "X" is released
UserInputService.InputEnded:Connect(function(input)
	if input.KeyCode == Enum.KeyCode.X then
		aimAssistEnabled = false
		targetPlayer = nil
		print("Aim assist disabled")
	end
end)

-- Update camera lock if aim assist is enabled
RunService.RenderStepped:Connect(function()
	if aimAssistEnabled and targetPlayer then
		lockCameraOntoTarget(targetPlayer)
	end
end)
   end,
})

local Toggle = MiscTab:CreateToggle({
   Name = "Kill Aura",
   CurrentValue = false,
   Flag = "Kill Aura", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
        if game.Players.LocalPlayer == nil then
    game.Players:GetPropertyChangedSignal("LocalPlayer"):Wait()
end
 
local Player = game.Players.LocalPlayer
local Debounce = false
local Killaura = true
local Mouse = Player:GetMouse()
local function Attack(Target)
    if Player.Character == nil or Target.Character == nil then
        return
    end
    local WeaponFolder = Player.Character:FindFirstChildOfClass("Folder")
    if WeaponFolder == nil or not WeaponFolder:FindFirstChild("Laminas") then
        return
    end
    if Target.Character:FindFirstChild("Humanoid") and Target.Character.Humanoid.Health <= 0 then
        return
    end
    game:GetService("ReplicatedStorage").LocalPlayer.EventoPrincipal:FireServer("Estado Ataque", true, 1, {})
    for i,v in pairs(Target.Character:GetChildren()) do
        if v:IsA("UnionOperation") then
            game:GetService("ReplicatedStorage").LocalPlayer.EventoPrincipal:FireServer("Parte Acertada", v.CFrame, WeaponFolder.Laminas.Lamina, v, v.CFrame * CFrame.new(0,math.random(-2,2),math.random(-3,3)), v.CFrame * CFrame.new(0,math.random(-2,2),math.random(-3,3)))
        end
    end
    game:GetService("ReplicatedStorage").LocalPlayer.EventoPrincipal:FireServer("Estado Ataque", false)
end
 
game:GetService('RunService').Stepped:connect(function()
    if Debounce == false and Killaura == true then 
        Debounce = true
        for i,v in pairs(game.Players:GetPlayers()) do
            if v ~= Player and not Player:IsFriendsWith(v.UserId) and v.Character ~= nil and v.Character:FindFirstChild("HumanoidRootPart") and Player:DistanceFromCharacter(v.Character.HumanoidRootPart.Position) <= 20 then
                Attack(v)
            end
        end
        wait()
        Debounce = false
    end
end)
 
Mouse.KeyDown:Connect(function(key)
    if key == "g" then
        Killaura = not Killaura
        local currenttext = ""
        if Killaura == true then
            currenttext = "Killaura is now turned ON!"
        else
            currenttext = "Killaura is now turned OFF!"
        end
        game.StarterGui:SetCore("SendNotification", {
            Title = "notification";
            Text = currenttext;
            Icon = "rbxassetid://2541869220";
            Duration = 3;
        })
    end
end)
 
game.StarterGui:SetCore("SendNotification", {
    Title = "Killaura is now on";
    Text = "Press G to toggle\n Made by #silaskid";
    Icon = "rbxassetid://2541869220";
    Duration = 7;
})

   end,
})

local Section = MiscTab:CreateSection("NoClip")

local Button = MiscTab:CreateButton({
   Name = "NoClip",
   Callback = function()
         
nam = game.Players.LocalPlayer.Name
 
game:GetService('RunService').Stepped:connect(function()
for a, b in pairs(game.Workspace:GetChildren()) do
if b.Name == nam then
for i, v in pairs(game.Workspace[nam]:GetChildren()) do
if v:IsA("BasePart") then
v.CanCollide = false
 
end
end
end
end
end)
 
Workspace[nam].Head.Changed:connect(function()
for a, b in pairs(game.Workspace:GetChildren()) do
if b.Name == nam then
for i, v in pairs(game.Workspace[nam]:GetChildren()) do
if v:IsA("BasePart") then
v.CanCollide = false
 
end
end
end
end
end)

   end,
})

local Input = MiscTab:CreateInput({
   Name = "Jump Power",
   PlaceholderText = "0-200",
   RemoveTextAfterFocusLost = true,
   Callback = function(Text)
            game.Players.localPlayer.Character.Humanoid.JumpPower = (Text)
   end,
})
